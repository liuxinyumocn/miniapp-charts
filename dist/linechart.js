!function(t){var i={};function e(o){if(i[o])return i[o].exports;var r=i[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=i,e.d=function(t,i,o){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var r in t)e.d(o,r,function(i){return t[i]}.bind(null,r));return o},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){"use strict";function o(t){return JSON.parse(JSON.stringify(t))}function r(t){return!!t&&function(t,i){return Object.prototype.toString.call(i).match(/\s(\w+)/)[1].toLowerCase()===t}("object",t)}function n(t,i){if(!r(t)||!r(i))throw"destination and source must be type of object";for(let e in i)t[e]=i[e];return t}function s(t,i){let e;return e=t>=100?String(t).split("").reduce((t,i)=>10*t,.01):t>=10?5:t>1?1:.1}function l(t,i){let e,o=s(t);return 0===t?0:("up"===i?e=t+(o-t%o):"down"===i&&(e=t-t%o),e)}function h(t,i,e){if(t===i)return{max:t+2,min:i-2>=0?i-2:0,divider:1,multiple:1};if(0===t)return{max:4,min:0,divider:1,multiple:1};let o=1;(t-i)/e<1&&(t*=o=1e4,i*=o);let r=t,n=Math.round((t-i)/e);t+=t%(n=l(n,"down")),i=l(i-=i%n,"down");let h=s(n);for(let o=0;o<100;o++){let o=i+n*e;if(o>=t||o-r>=10*h)break;n+=h}return{max:(i+n*e)/o,min:i/o,divider:n/o,multiple:o}}function a(t,i=1){if(!function(t){return!isNaN(parseFloat(t))&&isFinite(t)}(t))return t;let e=parseFloat(t),o="",r=1;if(function(t){return Number(t)===t&&t%1!=0}(t)&&e<1e3)return e.toFixed(i);e<1e3||(e<1e4?(o="k",r=1e3):e<1e7?(o="w",r=1e4):(o="kw",r=1e7));let n=e/r;return n-Math.floor(n)<.5*Math.pow(.1,i)&&(i=0),n.toFixed(i)+o}e.r(i);var d={debug:!1,width:414,height:200,unit:"",changeUnit:null,formatY:null,padding:{left:10,right:10,top:10,bottom:5},lineStyle:{lineWidth:1,lineColor:"#7587db",fillColor:"rgba(117, 135, 219, 0.3)",needFill:!0,circle:{show:!0,fillColor:"#FFFFFF",strokeColor:"#FFAA00",radius:1.2}},maxCircleCount:30,xAxisCount:7,xAxis:{show:!0,marginTop:10,color:"#B8B8B8",fontSize:11},xAxisLine:{show:!1,centerShow:!0,width:.6,color:"#C6C6C6",style:"solid"},yAxisCount:4,yAxis:{show:!0,marginLeft:0,marginRight:10,color:"#B8B8B8",fontSize:11},yAxisLine:{show:!0,centerShow:!1,width:.2,color:"#C6C6C6"},toolTip:{lineColor:"#C6C6C6",lineWidth:.5,fontSize:11,color:"#FFFFFF",fillColor:"rgba(136, 136, 136, 0.6)",linePadding:5,padding:{left:5,right:5,top:5,bottom:5}}};class c{wordWidth(t,i){if(void 0===t||null===t)return 0;let e=0;for(let o=0;o<t.length;o++){e+=t.charCodeAt(o)>128?i:i/2}return e}getWordWidth(t){"number"==typeof t.text&&(t.text=t.text.toString());let i=this.wordWidth(t.text,t.fontSize);return Math.ceil(i)}drawWord(t,i){"number"==typeof i.text&&(i.text=i.text.toString()),t.beginPath(),t.setFontSize(i.fontSize),t.setFillStyle(i.color),t.setTextAlign(i.textAlign||"left"),t.fillText(i.text,i.x,i.y),t.stroke(),t.closePath()}drawRect(t,i){t.beginPath(),t.setStrokeStyle(i.fillColor),t.setFillStyle(i.fillColor),t.fillRect(i.x,i.y,i.width,i.height),t.closePath()}drawLine(t,i){t.beginPath(),t.setLineWidth(i.width||1),t.setStrokeStyle(i.color),t.moveTo(i.start.x,i.start.y),t.lineTo(i.end.x,i.end.y),t.stroke(),t.closePath()}drawLongLineWithFill(t,i,e={lineWidth:1,lineColor:"#7587db",fillColor:"rgba(117, 135, 219, 0.3)"}){t.beginPath(),t.setFillStyle(e.fillColor),t.setLineWidth(e.lineWidth),t.setStrokeStyle(e.lineColor);let o=i[0],r=i[i.length-1];t.moveTo(o.x,o.y);for(let e=1;e<i.length-1;e++){let o=i[e];1===e?t.moveTo(o.x,o.y):t.lineTo(o.x,o.y)}t.stroke(),t.lineTo(r.x,r.y),t.lineTo(o.x,o.y),t.fill(),t.closePath()}drawCircle(t,i){t.beginPath(),t.setStrokeStyle(i.strokeColor),t.setFillStyle(i.fillColor),t.setLineWidth(i.lineWidth||1),t.arc(i.x,i.y,i.r,0,2*Math.PI),t.stroke(),t.fill(),t.closePath()}clear(t,i,e){t.clearRect(0,0,i,e),t.draw()}}e.d(i,"default",function(){return x});class x extends c{constructor(t,i={},e){super(),this.ctx1=t,this.ctx2=e||t,this._start=0,this._performance={},this._config=this.getConfig(i),this._boundary={},this._datasets=[],this._render={},this._touchTimer=0}log(t){this._performance[t]=new Date-this._start}getConfig(t,i){if(!r(t))throw new Error("options must be type of Object");let e=i||o(d);for(let i in e)if(void 0!==t[i]){if(typeof e[i]!=typeof t[i])throw new Error(`[LineChart] TypeMismatchï¼š${i} must be type of ${typeof e[i]}`);r(t[i])?e[i]=n(e[i],t[i]):e[i]=t[i]}return e}calBoundaryPoint(){let t=this._config,i=this._config.padding;return this._boundary.leftTop={x:i.left,y:i.top},this._boundary.leftBottom={x:i.left,y:t.height-i.bottom-t.xAxis.fontSize-t.xAxis.marginTop},this._boundary.rightTop={x:t.width-i.right,y:i.top},this._boundary.rightBottom={x:t.width-i.right,y:this._boundary.leftBottom.y},this._boundary.size={width:this._boundary.rightTop.x-this._boundary.leftTop.x,height:this._boundary.leftBottom.y-this._boundary.leftTop.y},this.log("calBoundaryPoint"),this._boundary}calPointData(){let t=[],i=this._render.yAxisWidth,e=this._boundary.leftBottom,o=e.x+i,r=this._render.longestLine,n=this._config.maxCircleCount>=r.points.length,s={x:e.x+i,y:e.y},l=[];this._datasets.forEach(i=>{let r=i.style,h=r.circle,a=i.points,d=a.length,c={points:[],style:r};a.forEach((t,i)=>{if(i<d){let s={x:o+i*this._render.unitX,y:e.y-(t.y-this._render.min)*this._render.unitY*this._render.yMultiple};if(r.circle&&r.circle.show&&n){let t={x:s.x,y:s.y,r:h.radius||2,fillColor:h.fillColor||"#FFFFFF",strokeColor:r.lineColor,lineWidth:r.lineWidth};l.push(t)}c.points.push(s)}}),a.length>1&&(c.points.unshift(s),c.points.push({x:c.points[c.points.length-1].x,y:e.y}),t.push(c))}),this._render.circlePoints=l,this._render.pointData=t}calXAxisLines(){let t=this._render.yAxisWidth,i=this._boundary.leftBottom,e=this._boundary.rightBottom,o=this._config.xAxisLine;this._render.xCenterAxis={start:{x:i.x+t,y:i.y},end:{x:e.x,y:i.y},width:o.width,color:o.color}}calXAxis(){this._datasets;let t=this._render,i=this._render.longestLinePointCnt,e=this._config.xAxisCount,o=this._render.longestLine.points,r=this._config.xAxis,n=this._boundary.leftBottom,s=[],l=this._boundary.rightBottom.x-n.x-this._render.yAxisWidth,h=o.length-1>0?o.length-1:1;t.unitX=l/h;let a=parseInt(i/e);0===a&&(a=1);let d=this._render.yAxisWidth+n.x,c=n.y+r.marginTop+r.fontSize;for(let e=0;e<i;e+=a){let i={text:o[e].x,color:r.color,fontSize:r.fontSize,x:d+e*t.unitX,y:c},n=this.getWordWidth(i);i.x-=n/2,i.x+n>this._config.width&&(i.x=this._config.width-n-1),s.push(i)}this._render.xAxisData=s}calYAxisLines(){let t=this._render.yAxisWidth,i=this._boundary.leftTop,e=this._boundary.leftBottom,o=this._boundary.rightBottom,r=this._config.yAxisLine;this._render.yCenterAxis={start:{x:i.x+t,y:i.y},end:{x:i.x+t,y:e.y},width:r.width,color:r.color},this._render.yAxisLines=[],this._render.yAxisData.forEach((i,e)=>{e>0&&this._render.yAxisLines.push({start:{x:i.x+t,y:i.y},end:{x:o.x,y:i.y},width:r.width,color:r.color})})}calYAxis(){let{max:t,min:i,yDivider:e,maxYPoint:o,longestLine:r}=this.calYAxisBoundary(),n=this._config.yAxis,s=(this._config.yAxisLine,[]),l=0,h=(this._boundary.leftBottom.y-this._boundary.leftTop.y)/(e*this._render.yMultiple*this._config.yAxisCount+1),d=this._boundary.leftTop.x+n.marginLeft,c=this._boundary.leftBottom.y,x=this._config.changeUnit||a,f=t<1?2:1;for(let t=0;t<this._config.yAxisCount+1;t++){let o={text:x(i+t*e,f)+this._config.unit,color:n.color,fontSize:n.fontSize,x:d,y:c-t*e*h*this._render.yMultiple};l=Math.max(this.getWordWidth(o),l),s.push(o)}l=n.show?l+n.marginRight:0,this._render.unitY=h,this._render.yAxisWidth=l,this._render.yAxisData=s,this._render.longestLinePointCnt=o,this._render.longestLine=r,this.log("calYAxis")}getMinY(t){return t.reduce((t,i)=>i.y<t?i.y:t,t[0].y)}getMaxY(t){return t.reduce((t,i)=>i.y>t?i.y:t,t[0].y)}calYAxisBoundary(){let t=this._datasets,i=0,e=t[0],o=this._config.yAxisCount,r=-1/0,n=1/0;new Date;t.forEach(t=>{let o=t.points||[];o.length>i&&(i=o.length,e=t),r=Math.max(this.getMaxY(o),r),n=Math.min(this.getMinY(o),n)});let s=(this._config.formatY||h)(r,n,o);return this._render.min=s.min,this._render.yMultiple=s.multiple||1,{max:s.max,min:s.min,yDivider:s.divider,maxYPoint:i,longestLine:e}}calToolTipPointData(t){let i=t.touches[0].x,e=this._boundary.leftTop,o=this._boundary.rightTop,r=this._boundary.leftBottom,n=this._render.longestLine,s=this._render.yAxisWidth,l=i-(e.x+s);l<0?l=0:l>o.x&&(l=o.x);let h=Math.round(l/this._render.unitX);h>n.points.length-1&&(h=n.points.length-1),this._render.toolTipData={currPoints:[],pindex:h,leftDis:l},this._datasets.forEach((t,i)=>{let e=this._render.pointData[i].points[h+1],o=t.style;if(e){let t={x:e.x,y:e.y,st:0,ed:2*Math.PI,r:o.circle.radius,fillColor:o.lineColor,strokeColor:o.lineColor};this._render.toolTipData.currPoints.push(t)}});let a=this._render.toolTipData.currPoints[0],d=this._config.toolTip;this._render.toolTipData.currPointsLine={start:{x:a.x,y:e.y},end:{x:a.x,y:r.y},color:d.lineColor,width:d.lineWidth}}calToolTipWordData(t){this._render.toolTipData.circles=[];let i=this._render.toolTipData.wrapper,e=this._render.longestLine,o=this._config.toolTip,r=i.x,n=i.y,s=this._render.toolTipData.words,l={x:0,y:n+o.fontSize+o.linePadding,fontSize:o.fontSize,color:o.color,text:e.points[this._render.toolTipData.pindex].x};n+=o.fontSize+o.linePadding,s.forEach((t,i)=>{t.x=r+o.padding.left,t.y=n+o.padding.top+o.fontSize+i*(o.fontSize+o.linePadding);let e={x:r+o.padding.left+o.fontSize/2,y:t.y-o.fontSize/2+1,strokeColor:t.line.style.lineColor,fillColor:t.line.style.lineColor,r:o.fontSize/2};this._render.toolTipData.circles.push(e),t.x+=o.fontSize+5}),l.x=s[0].x,s.unshift(l)}calToolTipWrapperData(t){let i=this._config.toolTip,e=this._render.longestLine,o=this._render.toolTipData.pindex,r=(e.points[o].x,0),n=i.padding.left+i.padding.right+i.fontSize+5,s=i.padding.top+i.padding.bottom+i.fontSize+i.linePadding;this._render.toolTipData.words=[];let l=this._config.changeUnit||a;this._datasets.forEach(t=>{let e=t.points[o],n=t.lineName?t.lineName+": ":"";if(e){let o={text:n+l(e.y)+this._config.unit,fontSize:i.fontSize,color:i.color,x:0,y:0,line:t};r=Math.max(r,this.getWordWidth(o)),s+=i.fontSize+i.linePadding,this._render.toolTipData.words.push(o)}}),n+=r;let h=this._render.toolTipData,d=this._boundary.leftTop,c=this._boundary.rightTop;this._render.toolTipData.wrapper={width:n,height:s,x:c.x-h.currPointsLine.start.x>n?h.currPointsLine.start.x+3:h.currPointsLine.start.x-n-3,y:d.y+10,fillColor:i.fillColor}}calToolTipData(t){this.calToolTipPointData(t),this.calToolTipWrapperData(t),this.calToolTipWordData(t)}drawXAxis(){this._render.xAxisData.forEach(t=>{this.drawWord(this.ctx1,t)}),this._config.xAxisLine.centerShow&&this.drawLine(this.ctx1,this._render.xCenterAxis)}drawYAxis(){this._render.yAxisData.forEach(t=>{this.drawWord(this.ctx1,t)}),this._config.yAxis.centerShow&&this.drawLine(this.ctx1,this._render.yCenterAxis)}drawYAxisLine(){this._config.yAxisLine.show&&this._render.yAxisLines.forEach(t=>{this.drawLine(this.ctx1,t)})}drawXAxisLine(){}drawPoints(){this._render.pointData.forEach(t=>{t.points.length>1&&this.drawLongLineWithFill(this.ctx1,t.points,t.style)}),this._render.circlePoints.forEach(t=>{this.drawCircle(this.ctx1,t)})}drawToolTip(){let t=this._render.toolTipData;t.currPoints.forEach(t=>{this.drawCircle(this.ctx2,t)}),this.drawLine(this.ctx2,t.currPointsLine),this.drawRect(this.ctx2,t.wrapper),t.words.forEach(t=>{this.drawWord(this.ctx2,t)}),t.circles.forEach(t=>{this.drawCircle(this.ctx2,t)})}drawToCanvas(){this.drawYAxis(),this.log("drawYAxis"),this.drawYAxisLine(),this.log("drawYAxisLine"),this.drawXAxis(),this.log("drawXAxis"),this.drawPoints(),this.log("drawPoints")}initDataSets(t){let i=t.datasets||[];this._datasets=i.filter(t=>t.points&&t.points.length),this._datasets.forEach(t=>{let i=o(this._config.lineStyle),e=t.style||{};if(!r(e))throw new Error("[LineChart] TypeMismatchï¼šthe style of dataset must be type of Object");for(let t in e)i[t]&&(r(i[t])?i[t]=n(i[t],e[t]):i[t]=e[t]);t.style=i})}initData(t){this.initDataSets(t),this._datasets.length&&(this.calBoundaryPoint(),this.calYAxis(),this.calYAxisLines(),this.calXAxis(),this.calXAxisLines(),this.calPointData(),this.log("initData"))}draw(t,i={}){this._start=new Date,this.clear(this.ctx2,this._config.width,this._config.height),this.getConfig(i,this._config),this.initData(t),this._datasets.length&&(this.drawToCanvas(),this.ctx1.draw(),this.log("realDraw"),this._config.debug&&console.log(this._performance))}touchHandler(t){new Date;this.ctx2===this.ctx1&&this.drawToCanvas(),this.calToolTipData(t),this.drawToolTip(),this.ctx2.draw()}touch(t){clearTimeout(this._touchTimer),this._touchTimer=setTimeout(()=>{this.touchHandler(t)},5)}touchEnd(t){this.ctx2===this.ctx1&&this.drawToCanvas(),this.ctx2.draw()}}}]);